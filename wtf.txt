server.js

EVENTOS QUE RECIBE
getRouterRtpCapabilities -> return routerRtpCapabilities (no se bien quien determina quienes son) a traves del callback turbio
createParticipant -> crea un nuevo participante de la reunion con sus dos transports

connectProducerTransport -> conecta el producerTransport con el del cliente a partir de los dtlsparameters que le mandan, no se lo que son todavia.
connectConsumerTransport -> conecta el consumerTransport con el del cliente a partir de los dtlsparameters que le mandan, no se lo que son todavia.
produce -> crea el Producer, fuente del stream de video del client, y avisa que lo creo emitiendo newProducer con el id del producer.
consume -> Se fija si el router puede consumir del producer que tiene. Si puede, consume del producer.
resume -> resumea el stream del consumer

EVENTOS QUE EMITE
newProducer -> avisa que hay un nuevo producer, manda su id en el campo de datos

client.js

COSAS QUE HACE
1. Conectarse: al conectarse le pide al server las routerRtpCapabilities, crea el Device y le carga las rtpCapabilities remotas
2. Publish:
    a. Le pide al server que cree un producerTransport pasandole las rtpCapabilities del Device
    b. Crea un sendTransport con la data del producerTransport remoto
    c. Dice que al crear el producer local le solicite al server que cree el correspondiente producer remoto 
    d. Al conectarse el transport al remoto, muestra el video local
    e. Obtiene el video local 
3. Suscribe: 
    a. Le pide al server que cree un connectConsumerTransport
    b. Crea un recvTransport con la data del transport remoto
    c. 

EVENTOS QUE RECIBE
newProducer -> da la opcion de suscribirse 

EVENTOS QUE EMITE



la gran duda: que es ese callback turbio que reciben los callbacks de socket.on? quien lo crea?